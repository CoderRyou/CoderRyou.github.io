import{_ as o,c as p,b as r,d as a,w as l,r as t,o as d,a as n,e as s}from"./app-B2mBavQS.js";const m={};function u(b,e){const i=t("CodeGroupItem"),c=t("CodeGroup");return d(),p("div",null,[e[4]||(e[4]=r(`<h2 id="题目描述" tabindex="-1"><a class="header-anchor" href="#题目描述"><span>题目描述</span></a></h2><p>给定一个文本文件 file.txt，请只打印这个文件中的第十行。</p><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h3><p>假设 <code>file.txt</code> 有如下内容：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Line 1</span>
<span class="line">Line 2</span>
<span class="line">Line 3</span>
<span class="line">Line 4</span>
<span class="line">Line 5</span>
<span class="line">Line 6</span>
<span class="line">Line 7</span>
<span class="line">Line 8</span>
<span class="line">Line 9</span>
<span class="line">Line 10</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你的脚本应当显示第十行：</p><blockquote><p>Line 10</p></blockquote><h3 id="说明" tabindex="-1"><a class="header-anchor" href="#说明"><span>说明</span></a></h3><ol><li>如果文件少于十行，你应当输出什么？</li><li>至少有三种不同的解法，请尝试尽可能多的方法来解题。</li></ol><h2 id="题解" tabindex="-1"><a class="header-anchor" href="#题解"><span>题解</span></a></h2>`,10)),a(c,null,{default:l(()=>[a(i,{title:"shell 1"},{default:l(()=>e[0]||(e[0]=[n("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token assign-left variable"},"cnt"),n("span",{class:"token operator"},"="),n("span",{class:"token number"},"0")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token builtin class-name"},"read"),s(" line "),n("span",{class:"token operator"},"&&"),s(),n("span",{class:"token punctuation"},"["),s(),n("span",{class:"token variable"},"$cnt"),s(),n("span",{class:"token parameter variable"},"-le"),s(),n("span",{class:"token number"},"10"),s(),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s()]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"do"),s()]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token builtin class-name"},"let"),s(),n("span",{class:"token string"},"'cnt = cnt + 1'"),s(),n("span",{class:"token comment"},"# cnt=$((cnt + 1))")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"["),s(),n("span",{class:"token variable"},"$cnt"),s(),n("span",{class:"token parameter variable"},"-eq"),s(),n("span",{class:"token number"},"10"),s(),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token keyword"},"then")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token builtin class-name"},"echo"),s(),n("span",{class:"token variable"},"$line")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token builtin class-name"},"exit"),s(),n("span",{class:"token number"},"0")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"fi")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"done"),s(),n("span",{class:"token operator"},"<"),s(" file.txt")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"# cnt=0 “初始化计数器变量 cnt 为 0，用于记录读取的行数”")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"# while read line && [ $cnt -le 10 ]; do “每次读一行，并且检查计数器 cnt 是否小于等于 10”")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"# let 'cnt = cnt + 1' “使用 let 进行数学运算，将计数器变量 cnt 加 1”")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"# if [ $cnt -eq 10 ]; then “判断当前计数器值是否等于 10”")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"# echo $line “打印第 10 行”")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"# exit 0 “输出第 10 行后，退出脚本，状态码为 0 表示成功”")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),a(i,{title:"shell 2"},{default:l(()=>e[1]||(e[1]=[n("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token function"},"awk"),s(),n("span",{class:"token string"},"'FNR == 10 {print }'"),s("  file.txt")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"# awk “用于逐行读取文件”")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"# FNR == 10 “FNR 表示当前文件的行号（针对每个文件单独计数）。FNR == 10 意味着当当前行号是第 10 行”")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"# {print} “打印当前行内容”")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"# file.txt “输入文件，awk 将逐行读取该文件的内容”")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"# FNR 与 NR 的区别，如下面shell：")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"# awk 'FNR == 10 {print }' file1.txt file2.txt")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"# FNR 是针对每个文件单独计数，因此会打印每个文件的第 10 行。")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"# 如果改用 NR，则 NR 是全局行号，会根据所有文件的行数累计。")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"# 例如，file1.txt 有 8 行，file2.txt 的第 2 行对应全局的第 10 行。")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),a(i,{title:"shell 3"},{default:l(()=>e[2]||(e[2]=[n("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token function"},"sed"),s(),n("span",{class:"token parameter variable"},"-n"),s(" 10p file.txt")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"# sed “是流编辑器，逐行处理文件”")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"# -n “禁用默认输出功能。默认情况下，sed 会处理每一行并输出结果，加上 -n 后，只有显式指定的内容才会输出”")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"# 10p “10 指匹配文件的第 10 行。 p 是打印匹配的行内容”")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"# file.txt “输入文件”")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),a(i,{title:"shell 4"},{default:l(()=>e[3]||(e[3]=[n("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token function"},"tail"),s(" -n+10 file.txt"),n("span",{class:"token operator"},"|"),n("span",{class:"token function"},"head"),s(),n("span",{class:"token parameter variable"},"-1")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"# tail “从文件末尾开始读取，但通过选项 -n+<N>，可以指定从第 N 行开始输出”")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"# -n+10 “从第 10 行开始输出文件内容（包括第 10 行及其后面的所有行）”")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"# | “管道符，用于将前一个命令的输出作为下一个命令的输入“")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"# head -1 “head 命令默认输出文件的前若干行。-1 指定只输出输入的第一行”")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1})]),_:1})])}const k=o(m,[["render",u]]),h=JSON.parse('{"path":"/blogs/leetcode/195.html","title":"Leetcode 195 - 第十行","lang":"zh-CN","frontmatter":{"title":"Leetcode 195 - 第十行","date":"2025/03/30","tags":["leetcode"],"categories":["leetcode"]},"headers":[{"level":2,"title":"题目描述","slug":"题目描述","link":"#题目描述","children":[{"level":3,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":3,"title":"说明","slug":"说明","link":"#说明","children":[]}]},{"level":2,"title":"题解","slug":"题解","link":"#题解","children":[]}],"git":{"createdTime":1761409505000,"updatedTime":1761409505000,"contributors":[{"name":"ryou","email":"zxc1106190679@qq.com","commits":1}]},"filePathRelative":"blogs/leetcode/195.md"}');export{k as comp,h as data};
